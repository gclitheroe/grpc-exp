// Code generated by protoc-gen-go.
// source: data.proto
// DO NOT EDIT!

/*
Package data is a generated protocol buffer package.

It is generated from these files:
	data.proto

It has these top-level messages:
	Result
	Site
	SiteSearchRequest
	SiteSearchResult
*/
package data

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Result struct {
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Site - data metrics are for a site.
type Site struct {
	// SiteID for the site e.g., TAUP
	SiteID string `protobuf:"bytes,1,opt,name=site_iD,json=siteID" json:"site_iD,omitempty"`
	// Latitude and Longitude, only uses three digits of precision after decimal
	Latitude  float32 `protobuf:"fixed32,2,opt,name=latitude" json:"latitude,omitempty"`
	Longitude float32 `protobuf:"fixed32,3,opt,name=longitude" json:"longitude,omitempty"`
}

func (m *Site) Reset()                    { *m = Site{} }
func (m *Site) String() string            { return proto.CompactTextString(m) }
func (*Site) ProtoMessage()               {}
func (*Site) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type SiteSearchRequest struct {
}

func (m *SiteSearchRequest) Reset()                    { *m = SiteSearchRequest{} }
func (m *SiteSearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SiteSearchRequest) ProtoMessage()               {}
func (*SiteSearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type SiteSearchResult struct {
	Result []*Site `protobuf:"bytes,1,rep,name=result" json:"result,omitempty"`
}

func (m *SiteSearchResult) Reset()                    { *m = SiteSearchResult{} }
func (m *SiteSearchResult) String() string            { return proto.CompactTextString(m) }
func (*SiteSearchResult) ProtoMessage()               {}
func (*SiteSearchResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SiteSearchResult) GetResult() []*Site {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*Result)(nil), "data.Result")
	proto.RegisterType((*Site)(nil), "data.Site")
	proto.RegisterType((*SiteSearchRequest)(nil), "data.SiteSearchRequest")
	proto.RegisterType((*SiteSearchResult)(nil), "data.SiteSearchResult")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Data service

type DataClient interface {
	// SiteSave creates or updates the site.
	SiteSave(ctx context.Context, in *Site, opts ...grpc.CallOption) (*Result, error)
	// SiteSearch searches for sites.
	SiteSearch(ctx context.Context, in *SiteSearchRequest, opts ...grpc.CallOption) (*SiteSearchResult, error)
}

type dataClient struct {
	cc *grpc.ClientConn
}

func NewDataClient(cc *grpc.ClientConn) DataClient {
	return &dataClient{cc}
}

func (c *dataClient) SiteSave(ctx context.Context, in *Site, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := grpc.Invoke(ctx, "/data.Data/SiteSave", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataClient) SiteSearch(ctx context.Context, in *SiteSearchRequest, opts ...grpc.CallOption) (*SiteSearchResult, error) {
	out := new(SiteSearchResult)
	err := grpc.Invoke(ctx, "/data.Data/SiteSearch", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Data service

type DataServer interface {
	// SiteSave creates or updates the site.
	SiteSave(context.Context, *Site) (*Result, error)
	// SiteSearch searches for sites.
	SiteSearch(context.Context, *SiteSearchRequest) (*SiteSearchResult, error)
}

func RegisterDataServer(s *grpc.Server, srv DataServer) {
	s.RegisterService(&_Data_serviceDesc, srv)
}

func _Data_SiteSave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Site)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServer).SiteSave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/data.Data/SiteSave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServer).SiteSave(ctx, req.(*Site))
	}
	return interceptor(ctx, in, info, handler)
}

func _Data_SiteSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SiteSearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServer).SiteSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/data.Data/SiteSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServer).SiteSearch(ctx, req.(*SiteSearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Data_serviceDesc = grpc.ServiceDesc{
	ServiceName: "data.Data",
	HandlerType: (*DataServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SiteSave",
			Handler:    _Data_SiteSave_Handler,
		},
		{
			MethodName: "SiteSearch",
			Handler:    _Data_SiteSearch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("data.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 216 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x49, 0x2c, 0x49,
	0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0x38, 0xb8, 0xd8, 0x82, 0x52,
	0x8b, 0x4b, 0x73, 0x4a, 0x94, 0x22, 0xb9, 0x58, 0x82, 0x33, 0x4b, 0x52, 0x85, 0xc4, 0xb9, 0xd8,
	0x8b, 0x81, 0x74, 0x7c, 0xa6, 0x8b, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x1b, 0x88, 0xeb,
	0xe9, 0x22, 0x24, 0xc5, 0xc5, 0x91, 0x93, 0x58, 0x92, 0x59, 0x52, 0x9a, 0x92, 0x2a, 0xc1, 0x04,
	0x94, 0x61, 0x0a, 0x82, 0xf3, 0x85, 0x64, 0xb8, 0x38, 0x73, 0xf2, 0xf3, 0xd2, 0x21, 0x92, 0xcc,
	0x60, 0x49, 0x84, 0x80, 0x92, 0x30, 0x97, 0x20, 0xc8, 0xe8, 0xe0, 0xd4, 0xc4, 0xa2, 0xe4, 0x8c,
	0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x25, 0x33, 0x2e, 0x01, 0x64, 0x41, 0x90, 0x1b, 0x84,
	0x94, 0xb8, 0xd8, 0x8a, 0xc0, 0x2c, 0xa0, 0xd5, 0xcc, 0x1a, 0xdc, 0x46, 0x5c, 0x7a, 0x60, 0x07,
	0x83, 0xd4, 0x05, 0x41, 0x65, 0x8c, 0xb2, 0xb9, 0x58, 0x5c, 0x80, 0x82, 0x42, 0x2a, 0x5c, 0x1c,
	0x60, 0xfd, 0x89, 0x65, 0xa9, 0x42, 0x48, 0xea, 0xa4, 0x78, 0x20, 0x6c, 0xa8, 0x89, 0xb6, 0x5c,
	0x5c, 0x08, 0x5b, 0x84, 0xc4, 0x11, 0xea, 0x50, 0x1c, 0x23, 0x25, 0x86, 0x29, 0x01, 0xd2, 0xee,
	0xc4, 0x16, 0x05, 0x0e, 0xa6, 0x24, 0x36, 0x70, 0x98, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff,
	0xd3, 0x1e, 0x2b, 0xb3, 0x41, 0x01, 0x00, 0x00,
}
